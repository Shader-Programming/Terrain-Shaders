#version 430

layout(local_size_x = 16,local_size_y = 64) in;
layout(binding = 0, rgba32f) uniform image2D noisetexture;

float hash(float n);
float snoise(vec3 x);
float noise(vec3 position, int octaves);

uniform float seed;


void main(){
	ivec2 pixelcoords = ivec2(gl_GlobalInvocationID.xy);
    int octaves = 10;

    float pixelcol = noise(vec3(pixelcoords.x,0,pixelcoords.y),octaves);
	vec4 pixel = vec4(pixelcol,pixelcol,pixelcol,1.0);
	imageStore(noisetexture,pixelcoords,pixel);
}


float hash(float n){
    return fract(sin(n)*seed); //753.543123
}

float snoise(vec3 x){
    vec3 p = floor(x);
    vec3 f = fract(x);

    f = f*f*(3-(2*f));

    float n = p.x+p.y*157+113*p.z;

    return mix(mix(mix(hash(n),hash(n+1),f.x),
    mix(hash(n+157),hash(n+158),f.x),f.y),
    mix(mix(hash(n+113),hash(n+114),f.x),
    mix(hash(n+270),hash(n+271),f.x),f.y),f.z);
}

float noise(vec3 position, int octaves){
    float total = 0.0f;
    float frequency = 0.005; //0.005
    float maxamplitude = 0.0f;
    float amplitude = 50; //50

    for(int i = 0; i < octaves; i++){
        total += snoise(position*frequency)*amplitude;
        frequency *= 2; //2
        amplitude /= 2; //2
        maxamplitude += amplitude;
    }
    return (total/maxamplitude)*100;
}